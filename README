Сборка

все скрипты предполагаю наличие cygwin

для создания инсталятора используется wix
http://wixtoolset.org/
для того что билд скрипт мог сделать инсталятор нужно что wix был в PATH

для того что начать работу нужно установить драйвер для mysql
lib/dcmysql72std.exe

пусть к msbuild должен быть в переменной среды PATH
пусть к bake должен быть в переменной среды PATH

перед началом работы нужно подготовить приложение
для этого в корне проекта выполни комманду ./scripts/prepare.sh

для компиляции шейдера нужен Direct3D Shader Compiler, fxc.exe должен быть в PATH
есть в windows sdk C:\Program Files (x86)\Windows Kits\8.0\bin\x64

Запуск

Для запуска есть proc-файл
запускается с помощью https://github.com/hecticjeff/shoreman

NHibernate

при работе с nhibernate нужно соблюдать правила
которые помогут избежать утечек памяти
# session.Query<..>().Where(i => i.BelongTo = filter)
такое выражение потенциально может привести к утечке памяти
тк nhibernate кеширует запросы
в кеш через замыкание попадет значение filter
если ViewModel подписалась на события в filter
то кеш потянет за сабой и модель цепочка получится примерно такая
кеш -> filter -> ViewModel
правильная версия запроса будет выглядеть так
var filterId = filter.Id
session.Query<..>().Where(i => i.BelongTo.Id = filterId)

Передача объектов между ViewModel

передавать объекты между ViewModel нужно крайне осторожно
лучше не передавать объекты из базы данных на прямуя а передавать
ключи этих объектов что
код в духе
var model = new PriceViewModel()
model.CurrentPrice = price;
может привести к утечки памяти
если текущая модель подписана на события в price
или ошибке доступа если какая либо связь не будет загружена

Zip

Ionic.Zip быстрее но прериодически получал битый архив
всегда ломается libmysql наверное потому что большой
SharpZipLib работает стабильно
Ionic остался тк у него более человеко-ориентированный интерфейс
а с распаковкой архива проблем нет
