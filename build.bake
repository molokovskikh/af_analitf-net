import file from AssemblyInfo.bake
import file from Db.bake
import file from Migration.bake
import file from Deploy.bake
import file from Web.bake
import file from AppSupport.bake
import file from WebSiteSupport.bake
import System
import System.Reflection
import System.IO
import System.Net.Mail
import System.Xml
import System.Xml.Linq
import System.Xml.XPath.Extensions

def FileElement(file as string, id as string, element as XElement):
	return XElement(element.Name.Namespace + "File", XAttribute("Id", id), XAttribute("Source", Path.GetFullPath(file)))

def AddDirectory(id as string, path as string, document as XDocument, manager as XmlNamespaceManager):
	element = document.XPathSelectElement("/prefix:Wix/prefix:Fragment/prefix:DirectoryRef[@Id='$id']/prefix:Component", manager)
	for file in Directory.GetFiles(path):
		fileId = Path.GetFileName(file) + "_" + id
		element.Add(FileElement(file, fileId, element))

	for dir in Directory.GetDirectories(path):
		id = Path.GetFileName(dir)
		AddDirectory(id, dir, document, manager)

def Bash(cmd as string):
	path = Environment.CurrentDirectory.Replace("\\", "/")
	Sh("bash -l -c \"cd $path;$cmd\"")

Global(
	Project: "AnalitF.Net.Service",
	HumanReadableName: "AnalitF.Net",
	Profile: @catalog,
	JenkinsProject: "AnalitF.Net"
)

task @default, [@Build]

task @Build, [@GenerateAssemblyInfo, @BuildWebSite]

task @DeployApp, [@WebDeploy]

task @DeployService, [@SetupEnvironment, @DeployPipeline]

task @deploy, [@SetupEnvironment, @Tag, @DeployService, @DeployClient, @SendNotification]

task @BuildClient, [@BeforeBuildApp, @BuildApp, @CopyNativeLib, @BuildSetup, @AfterBuildApp]

task @SetupEnvironment:
	unless Configuration.Maybe.env:
		Globals.DeployRoot = """\\acdcserv.adc.analit.net\WWWRoot\TEST"""

task @CopyNativeLib:
	Cp(FileSet("**", BaseDirectory: "lib/libmysqld"), "output/AnalitF.Net.Client")

task @BeforeBuildApp:
	Globals.Project = "AnalitF.Net.Client"

task @AfterBuildApp:
	Globals.Project = "AnalitF.Net.Service"

task @DeployClient, [@BuildClient]:
	Cp("output/setup/setup.exe", "//offdc/MMedia/Квасов Роман/", true)

task @BuildSetup:
	Bash("./scripts/wix.sh")

task @UpdateSetupFiles:
	assembly = Assembly.LoadFile(Path.GetFullPath("output\\AnalitF.Net.Client\\AnalitF.Net.Client.exe"))
	File.WriteAllText("output/setup/version.txt", assembly.GetName().Version.ToString())
	name = "output/setup/files.wxs"
	document = XDocument.Load(name)
	manager = XmlNamespaceManager(NameTable())
	manager.AddNamespace("prefix", "http://schemas.microsoft.com/wix/2006/wi")

	path = "output/AnalitF.Net.Client/"
	AddDirectory("INSTALLFOLDER", path, document, manager)
	document.Save(name)

task @BeforeBuildUpdater:
	Globals.Project = "Updater"

task @BuildUpdatePackage, [@BeforeBuildUpdater, @BuildApp]:
	Cp("build/version.txt", "output/Updater/", true)
	Cp("output/AnalitF.Net.Client/*", "output/Updater/", true)

task @Tag:
	Bash("./scripts/changes.sh")

task @SendNotification:
	mail = MailMessage("r.kvasov@analit.net", "emk@analit.net, r.kvasov@analit.net")
	mail.Subject = "Обновление демо версии"
	mail.Body = """\\offdc\MMedia\Квасов Роман\setup.exe - установщик"""
	mail.Attachments.Add(Attachment("output/changes.txt"))
	SmtpClient().Send(mail)
