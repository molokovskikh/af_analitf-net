import System
import System.Reflection
import System.IO
import System.Net.Mail
import System.Xml
import System.Xml.Linq
import System.Linq.Enumerable
import System.Xml.XPath.Extensions

def FileElement(file as string, id as string, element as XElement):
	return XElement(element.Name.Namespace + "File", XAttribute("Id", id), XAttribute("Source", Path.GetFullPath(file)))

def AddDirectory(id as string, path as string, document as XDocument, manager as XmlNamespaceManager):
	element = document.XPathSelectElement("/prefix:Wix/prefix:Fragment/prefix:DirectoryRef[@Id='$id']/prefix:Component", manager)
	for file in Directory.GetFiles(path):
		fileId = Path.GetFileName(file) + "_" + id
		element.Add(FileElement(file, fileId, element))

	for dir in Directory.GetDirectories(path):
		id = Path.GetFileName(dir)
		AddDirectory(id, dir, document, manager)

def Bash(cmd as string):
	path = Environment.CurrentDirectory.Replace("\\", "/")
	Sh("bash -l -c \"cd $path;$cmd\"")

Global(
	Project: "AnalitF.Net.Service",
	HumanReadableName: "AnalitF.Net",
	Profile: @catalog,
	Variables : {
		@Production : {
			@DeployRoot: """\\acdcserv.adc.analit.net\WWWRoot\TEST""",
			@UpdateDeployRoot: """\\acdcserv\WWWRoot\TEST\var\update"""
		},
		@Test : {
			@DeployRoot: """\\acdcserv.adc.analit.net\WWWRoot\TEST""",
			@DeployAlias: "AnalitF.Net.Service.Test",
			@UpdateDeployRoot: """\\acdcserv\WWWRoot\TEST\var-test\update"""
		}
	},
	JenkinsProject: "AnalitF.Net"
)

task @default, [@Build]

task @Build, [@GenerateAssemblyInfo, @BuildWebSite]

task @DeployApp, [@WebDeploy]

task "deploy:service", [@DeployPipeline]

task @deploy, ["git:tag", "deploy:app", "deploy:client", "deploy:update"]

task "deploy:client", ["build:client"]:
	Cp("output/setup/setup.exe", "//offdc/MMedia/Квасов Роман/", true)

task "deploy:update", ["build:client"]:
	dir = Globals.UpdateDeployRoot
	Rm("$dir/*")
	Cp("output/Updater/*", dir, true)

task "build:client", ["before:build:client", @BuildApp, "client:postprocess", "build:setup", "build:update", "after:build:client"]

task "client:postprocess":
	Cp(FileSet("**", BaseDirectory: "lib/libmysqld"), "output/AnalitF.Net.Client")

task "before:build:client":
	Globals.Project = "AnalitF.Net.Client"

task "after:build:client":
	Globals.Project = "AnalitF.Net.Service"

task "build:setup":
	Bash("./scripts/wix.sh")

task "setup:preprocess":
	assembly = Assembly.LoadFile(Path.GetFullPath("output\\AnalitF.Net.Client\\AnalitF.Net.Client.exe"))
	File.WriteAllText("output/setup/version.txt", assembly.GetName().Version.ToString())
	name = "output/setup/files.wxs"
	document = XDocument.Load(name)
	manager = XmlNamespaceManager(NameTable())
	manager.AddNamespace("prefix", "http://schemas.microsoft.com/wix/2006/wi")

	path = "output/AnalitF.Net.Client/"
	AddDirectory("INSTALLFOLDER", path, document, manager)
	document.Save(name)

task "before:build:update":
	Engine.Tasks.First({t| t.Name == @BuildApp}).Executed = false
	Globals.Project = "Updater"

task "build:update", ["before:build:update", @BuildApp]:
	Cp("output/setup/version.txt", "output/Updater/", true)
	Cp("output/AnalitF.Net.Client/*", "output/Updater/", true)
	Rm(FileSet("output/Updater/*.pdb"))

task "git:tag":
	Bash("./scripts/changes.sh")
